set -e

# Help message
show_help() {
    echo "Usage: $0 -n CONFIG_NAME -b BASE_DIR -i IP -a ALLOWED_IPS -e ENDPOINT"
    echo ""
    echo "Generate Wireguard keys and configuration file"
    echo ""
    echo "Arguments:"
    echo "  -n CONFIG_NAME   Name of the configuration"
    echo "  -b BASE_DIR      Base directory where to save the configuration"
    echo "  -i IP            IP address for the client (without /32)"
    echo "  -a ALLOWED_IPS   Comma-separated list of allowed IPs"
    echo "  -e ENDPOINT      Endpoint address with port (e.g., server.example.com:51820)"
    echo "  -h               Show this help message"
    exit 1
}

# Check if wireguard tools are installed
if ! command -v wg &> /dev/null; then
    echo "Error: Wireguard tools not found. Please install wireguard-tools package."
    exit 1
fi

# Get script directory
SCRIPT_DIR="$(dirname "$(realpath "$0")")"
TEMPLATE_FILE="$SCRIPT_DIR/client_template.conf"

# Check if template file exists
if [ ! -f "$TEMPLATE_FILE" ]; then
    echo "Error: Template file not found at $TEMPLATE_FILE"
    exit 1
fi

# Parse arguments
while getopts "n:b:i:a:e:h" opt; do
    case $opt in
        n) CONFIG_NAME="$OPTARG" ;;
        b) BASE_DIR="$OPTARG" ;;
        i) IP="$OPTARG" ;;
        a) ALLOWED_IPS="$OPTARG" ;;
        e) ENDPOINT="$OPTARG" ;;
        h) show_help ;;
        *) show_help ;;
    esac
done

# Check required arguments
if [ -z "$CONFIG_NAME" ] || [ -z "$BASE_DIR" ] || [ -z "$IP" ] || [ -z "$ALLOWED_IPS" ] || [ -z "$ENDPOINT" ]; then
    echo "Error: Missing required arguments"
    show_help
fi

# Create directory
CONFIG_DIR="$BASE_DIR/$CONFIG_NAME"
if [ -d "$CONFIG_DIR" ]; then
    echo "Warning: Configuration directory already exists. Files may be overwritten."
else
    mkdir -p "$CONFIG_DIR"
fi

# Generate keys
PRIVATE_KEY=$(wg genkey)
PUBLIC_KEY=$(echo "$PRIVATE_KEY" | wg pubkey)
PRESHARED_KEY=$(wg genpsk)

# Save keys to files
echo "$PRIVATE_KEY" > "$CONFIG_DIR/private.key"
echo "$PUBLIC_KEY" > "$CONFIG_DIR/public.key"
echo "$PRESHARED_KEY" > "$CONFIG_DIR/preshared.key"

# Set proper permissions
chmod 600 "$CONFIG_DIR/private.key" "$CONFIG_DIR/preshared.key"

# Get server public key
echo "Enter server public key:"
read SERVER_PUBLIC_KEY

# Create configuration file from template
CONFIG_FILE="$CONFIG_DIR/$CONFIG_NAME.conf"

# Copy template and replace placeholders
cp "$TEMPLATE_FILE" "$CONFIG_FILE"
sed -i "s|<ip>|$IP|g" "$CONFIG_FILE"
sed -i "s|<private_key>|$PRIVATE_KEY|g" "$CONFIG_FILE"
sed -i "s|<public_key>|$SERVER_PUBLIC_KEY|g" "$CONFIG_FILE"
sed -i "s|<preshared_key>|$PRESHARED_KEY|g" "$CONFIG_FILE"
sed -i "s|<allowed_ips>|$ALLOWED_IPS|g" "$CONFIG_FILE"
sed -i "s|<endpoint>|$ENDPOINT|g" "$CONFIG_FILE"

# Set proper permissions for the config file
chmod 600 "$CONFIG_FILE"

echo "Wireguard configuration has been generated successfully."
echo "Public key: $PUBLIC_KEY"